41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  1) #include <iostream>
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  2) #include <string>
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  3) #include <vector>
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  4) #include <fstream>
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  5) #include <SFML/Network.hpp>
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  6) #include <sstream>
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  7) 
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  8) using namespace std;
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  9) 
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400 10) static bool port_is_open(const string& address, int port)
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400 11) {
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400 12)     return (sf::TcpSocket().connect(sf::IpAddress::resolve(address).value(), port) == sf::Socket::Status::Done);
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400 13) }
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400 14) 
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400 15) void scan(const string& address, vector<int>ports)
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400 16) {
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400 17)     //Scanning each port and seeing whether it is open or closed
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400 18)     for(int i=0; i<ports.size(); i++)
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400 19)     {
f28eaddf3b (SaishMalluri 2022-10-13 17:29:04 -0400 20)         cout << "Scanning " << address << "...\n" << "Port " << ports[i] << " : " << endl;
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400 21)         if (port_is_open(address, i))