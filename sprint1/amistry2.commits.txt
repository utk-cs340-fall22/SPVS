fe287b552d (ankitm28 2022-10-13 17:44:48 -0400  1) #include <iostream>
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400  2) #include <stdlib.h>
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400  3) #include <string.h>
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400  4) #include <sys/types.h>
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400  5) #include <sys/socket.h>
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400  6) #include <netinet/in.h>
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400  7) #include <unistd.h>
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400  8) #include <errno.h>
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400  9) 
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400 10) using namespace std;
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400 11) struct sockaddr_in dest;
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400 12) 
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400 13) int main()
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400 14) {
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400 15)    int sockt, connct, port;
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400 16) 
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400 17)    cout << "Enter the number of port: ";
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400 18)    cin >> port;
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400 19) 
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400 20)    
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400 21)    if ((sockt = socket(AF_INET, SOCK_STREAM, 0)) == -1) {
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400 22)       perror("socket");
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400 23)       exit(1);
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400 24)    }
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400 25) 
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400 26)    dest.sin_family = AF_INET;
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400 27)    dest.sin_port = htons(port);
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400 28)    bzero(dest.sin_zero, sizeof(dest.sin_zero));
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400 29) 
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400 30)    
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400 31)    if ((connct = connect(sockt, (struct sockaddr *)&dest, sizeof(dest))) == -1) {
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400 32)       perror("connect");
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400 33)       close(sockt);
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400 34)       exit(1);
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400 35)    } else {
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400 36)       cout << port << " open" << endl;
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400 37)       exit(1);
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400 38)    }
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400 39) 
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400 40)    return 0;
fe287b552d (ankitm28 2022-10-13 17:44:48 -0400 41) }
