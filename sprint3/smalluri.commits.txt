41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400   1) #include <iostream>
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400   2) #include <string>
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400   3) #include <vector>
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400   4) #include <fstream>
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400   5) #include <SFML/Network.hpp>
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400   6) #include <sstream>
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400   7) 
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400   8) using namespace std;
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400   9) 
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  10) static bool port_is_open(const string& address, int port)
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  11) {
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  12)     return (sf::TcpSocket().connect(sf::IpAddress::resolve(address).value(), port) == sf::Socket::Status::Done);
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  13) }
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  14) 
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  15) void scan(const string& address, vector<int>ports)
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  16) {
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  17)     //Scanning each port and seeing whether it is open or closed
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  18)     for(int i=0; i<ports.size(); i++)
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  19)     {
f28eaddf3b (SaishMalluri 2022-10-13 17:29:04 -0400  20)         cout << "Scanning " << address << "...\n" << "Port " << ports[i] << " : " << endl;
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  21)         
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  22)         //Commonly used top ports
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  23)         if(ports[i]==20 || ports[i]==21)
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  24)         {
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  25)             cout << "Common port: FTP port" << endl;
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  26)         }
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  27) 
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  28)         else if(ports[i]==22)
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  29)         {
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  30)             cout << "Common port: SSH port" << endl;
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  31)         }
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  32) 
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  33)         else if(ports[i]==25)
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  34)         {
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  35)             cout << "Common port: SMTP port" << endl;
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  36)         }
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  37) 
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  38)         else if(ports[i]==53)
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  39)         {
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  40)             cout << "Common port: DNS port" << endl;
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  41)         }
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  42) 
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  43)         else if(ports[i]==80)
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  44)         {
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  45)             cout << "Common port: HTTP port" << endl;
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  46)         }
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  47) 
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  48)         else if(ports[i]==123)
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  49)         {
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  50)             cout << "Common port: NTP port" << endl;
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  51)         }
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  52) 
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  53)         else if(ports[i]==179)
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  54)         {
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  55)            cout << "Common port: BGP port" << endl; 
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  56)         }
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  57) 
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  58)         else if(ports[i]==443)
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  59)         {
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  60)             cout << "Common port: HTTPS port" << endl;
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  61)         }
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  62) 
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  63)         else if(ports[i]==500)
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  64)         {
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  65)             cout << "Common port: ISAKMP port" << endl;
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  66)         }
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  67) 
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  68)         else if(ports[i]==3389)
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  69)         {
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  70)             cout << "Common port: RDP port" << endl;
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  71)         }
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  72) 
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  73)         if (port_is_open(address, i))
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  74)         {
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  75)             cout << "OPEN" << endl;
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  76)         }
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  77) 
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  78)         else
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  79)         {
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  80)             cout << "CLOSED" << endl;
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  81)         }
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  82) 
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  83)         cout << endl;
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  84)     }
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  85) }
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  86) 
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  87) int main(int argc, char ** argv)
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  88) {
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  89)     vector<int> ports;
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500  90)     vector<string>addresses;
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400  91)     int port;
f28eaddf3b (SaishMalluri 2022-10-13 17:29:04 -0400  92)     string address;
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  93)     bool rangeScan=false;
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  94)     string s;
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500  95)     string st;
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500  96)     string stri;
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500  97)     string x;
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500  98)     bool defaultScan=false;
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400  99)     int rangeOne;
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400 100)     int rangeTwo;
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 101)     bool IPScan=false;
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400 102) 
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 103)     cout << "Would you like to do a default scan?";
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 104)     cin >> x;
f28eaddf3b (SaishMalluri 2022-10-13 17:29:04 -0400 105)     cout << endl;
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400 106) 
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 107)     if(x=="Yes" || x=="yes")
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400 108)     {
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 109)         defaultScan=true;
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400 110)     }
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 111) 
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 112)     //Default scan: scanning first 100 ports for "localhost" address
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 113)     if(defaultScan)
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400 114)     {
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 115)         for(int i=0; i<=100; i++)
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400 116)         {
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400 117)             ports.push_back(i);
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400 118)         }
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 119) 
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 120)         scan("localhost",ports);
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400 121)     }
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400 122) 
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400 123)     else
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400 124)     {
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 125)         cout << "Would you like to scan for multiple addresses?" << endl;
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 126)         cin >> st;
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 127)         cout << endl;
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 128) 
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 129)         if(st=="Yes" || st=="yes")
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 130)         {
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 131)             IPScan=true;
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 132)         }
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400 133) 
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 134)         if(IPScan)
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400 135)         {
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 136)             //Scanning multiple addresses if user specifies
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 137)             cout << "Please enter the addresses that you would like to use: " << endl;
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 138) 
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 139)             //Reading in addresses until user "quits"
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 140)             while(true)
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400 141)             {
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 142)                 cin >> stri;
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 143)                 if(stri=="q")
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 144)                 {
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 145)                     break;
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 146)                 }
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 147) 
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 148)                 addresses.push_back(stri);
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400 149)             }
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 150)         } 
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 151) 
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 152)         else
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 153)         {
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 154)             //Single address that is used for scanning
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 155)             cout << "Please enter address: " << endl;
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 156)             cin >> address;
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 157)             addresses.push_back(address);
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 158)             cout << endl;
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400 159)         }
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400 160) 
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 161)         //Asking user for scanning range of ports
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 162)         cout << "Would you like to scan a range of ports?" << endl;
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 163)         cin >> s;
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 164)         cout << endl;
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 165)     
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 166)         if(s=="Yes" || s=="yes")
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 167)         {
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 168)             rangeScan=true;
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 169)         }
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 170)         
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 171)         //Scanning range of ports
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 172)         if(rangeScan)
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 173)         {
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 174)             cout << "Please enter a range of ports that you would like to scan (ex: 20 40): ";
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 175)             cin >> rangeOne >> rangeTwo;
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 176)             cout << endl;
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 177)             for(int i=rangeOne; i<=rangeTwo; i++)
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 178)             {
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 179)                 ports.push_back(i);
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 180)             }
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 181)         }
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 182) 
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 183)         //Scanning specified ports
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 184)         else
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 185)         {
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 186)             cout << "Please enter the ports that you would like to be scanned: " << endl;
f28eaddf3b (SaishMalluri 2022-10-13 17:29:04 -0400 187) 
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 188)             //Getting all the ports that you want to scan
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 189)             while(true)
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 190)             {
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 191)                 if(!(cin >> port))
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 192)                 {
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 193)                     break;
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 194)                 }
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 195)                 ports.push_back(port);
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 196)             }
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 197)         }
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 198) 
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 199)         //Scanning all ports for each address
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 200)         for(int i=0; i<addresses.size(); i++)
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 201)         {
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 202)             scan(addresses[i],ports);
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 203)         }
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 204)     }
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 205)     
193977b585 (SaishMalluri 2022-11-10 19:26:01 -0500 206)    
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400 207)     return 0;
41a371f6c6 (SaishMalluri 2022-10-13 01:53:17 -0400 208) }
31f1e5aed8 (SaishMalluri 2022-10-27 23:01:41 -0400 209) 
